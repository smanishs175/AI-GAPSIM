version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      target: development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db/wecc_grid
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=development_secret_key_change_in_production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173
      - DATA_DIR=/app/data
    depends_on:
      - db
      - redis
    networks:
      - app-network

  # Database initialization service
  db-init:
    build:
      context: ./backend
      target: development
    volumes:
      - ./backend:/app
      - ./data:/app/data
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db/wecc_grid
      - DATA_DIR=/app/data
    command: python init_db.py
    depends_on:
      - db
    networks:
      - app-network
    restart: on-failure

  # Frontend service
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - app-network

  # PostgreSQL database with PostGIS extension
  db:
    image: postgis/postgis:15-3.3
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wecc_grid
    networks:
      - app-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # PgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
